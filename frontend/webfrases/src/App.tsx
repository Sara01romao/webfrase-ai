
import { useEffect, useState } from 'react'
import './App.css'


interface GeneratedText {
  generated_text: string; 
}

function App() {

  const [phrase, setPhrase] = useState<GeneratedText[]>([])
  const [nameDate, setNameDate] =useState<string>('');
  const [activeButton, setActiveButton] = useState(null);
  

    useEffect(() => {
      if (nameDate) {
        loadtxt();
      }
    }, [nameDate]);


    async function loadtxt() {
      try {
        if(nameDate){

          
          const data = {
            inputs: `Crie uma frase entre curta para a rede social comemorando ${nameDate}`,
            parameters: { max_new_tokens: 50 },
          };

          const response = await fetch("http://localhost:3000/query", {
            method: "POST",
            headers: {
              "Content-Type": "application/json",
            },
            body: JSON.stringify(data),
          });

        
          const result = await response.json();
          console.log(result); 


          setPhrase(result)

        }
      } catch (error) {
        console.error("Erro", error); 
      }
    
      console.table(phrase[0].generated_text
      )
    }

  //limpa resultado
  const cleanText = (text: string) => {
     
    const parts = text.split('#');
    return parts[1] ? parts[1].trim() : text;
  };

  function handleCreate(name:string){
    setNameDate(name);
    // loadtxt()
  }

  function handleClean(){
    setPhrase([])
  }

  

  function handleFilter(idBtn:any, dataNome: string){
     setActiveButton(idBtn);
     setNameDate(dataNome);
   
    
  }
  
  return (
  
    <div className='container'>

     <header>
        <svg width="201" height="27" viewBox="0 0 201 27" fill="none" xmlns="http://www.w3.org/2000/svg">
          <path d="M45.446 23L40.4517 5.54545H44.483L47.3722 17.6733H47.517L50.7045 5.54545H54.1562L57.3352 17.6989H57.4886L60.3778 5.54545H64.4091L59.4148 23H55.8182L52.4943 11.5881H52.358L49.0426 23H45.446ZM70.8757 23.2557C69.5291 23.2557 68.37 22.983 67.3984 22.4375C66.4325 21.8864 65.6882 21.108 65.1655 20.1023C64.6428 19.0909 64.3814 17.8949 64.3814 16.5142C64.3814 15.1676 64.6428 13.9858 65.1655 12.9688C65.6882 11.9517 66.424 11.1591 67.3729 10.5909C68.3274 10.0227 69.4467 9.73864 70.7308 9.73864C71.5945 9.73864 72.3984 9.87784 73.1428 10.1562C73.8928 10.429 74.5462 10.8409 75.103 11.392C75.6655 11.9432 76.103 12.6364 76.4155 13.4716C76.728 14.3011 76.8842 15.2727 76.8842 16.3864V17.3835H65.8303V15.1335H73.4666C73.4666 14.6108 73.353 14.1477 73.1257 13.7443C72.8984 13.3409 72.5831 13.0256 72.1797 12.7983C71.782 12.5653 71.3189 12.4489 70.7905 12.4489C70.2393 12.4489 69.7507 12.5767 69.3246 12.8324C68.9041 13.0824 68.5746 13.4205 68.3359 13.8466C68.0973 14.267 67.9751 14.7358 67.9695 15.2528V17.392C67.9695 18.0398 68.0888 18.5994 68.3274 19.071C68.5717 19.5426 68.9155 19.9062 69.3587 20.1619C69.8018 20.4176 70.3274 20.5455 70.9354 20.5455C71.3388 20.5455 71.7081 20.4886 72.0433 20.375C72.3786 20.2614 72.6655 20.0909 72.9041 19.8636C73.1428 19.6364 73.3246 19.358 73.4496 19.0284L76.8075 19.25C76.6371 20.0568 76.2876 20.7614 75.7592 21.3636C75.2365 21.9602 74.5604 22.4261 73.7308 22.7614C72.907 23.0909 71.9553 23.2557 70.8757 23.2557ZM79.3217 23V5.54545H82.9524V12.108H83.0632C83.2223 11.7557 83.4524 11.3977 83.7536 11.0341C84.0604 10.6648 84.4581 10.358 84.9467 10.1136C85.4411 9.86364 86.0547 9.73864 86.7876 9.73864C87.7422 9.73864 88.6229 9.98864 89.4297 10.4886C90.2365 10.983 90.8814 11.7301 91.3643 12.7301C91.8473 13.7244 92.0888 14.9716 92.0888 16.4716C92.0888 17.9318 91.853 19.1648 91.3814 20.1705C90.9155 21.1705 90.2791 21.929 89.4723 22.446C88.6712 22.9574 87.7734 23.2131 86.7791 23.2131C86.0746 23.2131 85.4751 23.0966 84.9808 22.8636C84.4922 22.6307 84.0916 22.3381 83.7791 21.9858C83.4666 21.6278 83.228 21.267 83.0632 20.9034H82.9013V23H79.3217ZM82.8757 16.4545C82.8757 17.233 82.9837 17.9119 83.1996 18.4915C83.4155 19.071 83.728 19.5227 84.1371 19.8466C84.5462 20.1648 85.0433 20.3239 85.6286 20.3239C86.2195 20.3239 86.7195 20.1619 87.1286 19.8381C87.5376 19.5085 87.8473 19.054 88.0575 18.4744C88.2734 17.8892 88.3814 17.2159 88.3814 16.4545C88.3814 15.6989 88.2763 15.0341 88.0661 14.4602C87.8558 13.8864 87.5462 13.4375 87.1371 13.1136C86.728 12.7898 86.2251 12.6278 85.6286 12.6278C85.0376 12.6278 84.5376 12.7841 84.1286 13.0966C83.7251 13.4091 83.4155 13.8523 83.1996 14.4261C82.9837 15 82.8757 15.6761 82.8757 16.4545ZM94.5795 23V5.54545H106.136V8.58807H98.2699V12.7472H105.369V15.7898H98.2699V23H94.5795ZM108.339 23V9.90909H111.859V12.1932H111.996C112.234 11.3807 112.635 10.767 113.197 10.3523C113.76 9.93182 114.408 9.72159 115.141 9.72159C115.322 9.72159 115.518 9.73295 115.729 9.75568C115.939 9.77841 116.124 9.80966 116.283 9.84943V13.071C116.112 13.0199 115.876 12.9744 115.575 12.9347C115.274 12.8949 114.999 12.875 114.749 12.875C114.214 12.875 113.737 12.9915 113.317 13.2244C112.902 13.4517 112.572 13.7699 112.328 14.179C112.089 14.5881 111.97 15.0597 111.97 15.5938V23H108.339ZM121.518 23.2472C120.683 23.2472 119.938 23.1023 119.285 22.8125C118.631 22.517 118.114 22.0824 117.734 21.5085C117.359 20.929 117.171 20.2074 117.171 19.3438C117.171 18.6165 117.305 18.0057 117.572 17.5114C117.839 17.017 118.202 16.6193 118.663 16.3182C119.123 16.017 119.646 15.7898 120.231 15.6364C120.822 15.483 121.441 15.375 122.089 15.3125C122.85 15.233 123.464 15.1591 123.93 15.0909C124.396 15.017 124.734 14.9091 124.944 14.767C125.154 14.625 125.259 14.4148 125.259 14.1364V14.0852C125.259 13.5455 125.089 13.1278 124.748 12.8324C124.413 12.5369 123.935 12.3892 123.316 12.3892C122.663 12.3892 122.143 12.5341 121.756 12.8239C121.37 13.108 121.114 13.4659 120.989 13.8977L117.631 13.625C117.802 12.8295 118.137 12.142 118.637 11.5625C119.137 10.9773 119.782 10.5284 120.572 10.2159C121.367 9.89773 122.288 9.73864 123.333 9.73864C124.06 9.73864 124.756 9.82386 125.421 9.99432C126.092 10.1648 126.685 10.429 127.202 10.7869C127.725 11.1449 128.137 11.6051 128.438 12.1676C128.739 12.7244 128.89 13.392 128.89 14.1705V23H125.447V21.1847H125.344C125.134 21.5938 124.853 21.9545 124.501 22.267C124.148 22.5739 123.725 22.8153 123.231 22.9915C122.737 23.1619 122.165 23.2472 121.518 23.2472ZM122.558 20.7415C123.092 20.7415 123.563 20.6364 123.972 20.4261C124.381 20.2102 124.702 19.9205 124.935 19.5568C125.168 19.1932 125.285 18.7812 125.285 18.321V16.9318C125.171 17.0057 125.015 17.0739 124.816 17.1364C124.623 17.1932 124.404 17.2472 124.16 17.2983C123.915 17.3437 123.671 17.3864 123.427 17.4261C123.183 17.4602 122.961 17.4915 122.762 17.5199C122.336 17.5824 121.964 17.6818 121.646 17.8182C121.327 17.9545 121.08 18.1392 120.904 18.3722C120.728 18.5994 120.64 18.8835 120.64 19.2244C120.64 19.7188 120.819 20.0966 121.177 20.358C121.54 20.6136 122.001 20.7415 122.558 20.7415ZM142.599 13.642L139.275 13.8466C139.218 13.5625 139.096 13.3068 138.908 13.0795C138.721 12.8466 138.474 12.6619 138.167 12.5256C137.866 12.3835 137.505 12.3125 137.085 12.3125C136.522 12.3125 136.048 12.4318 135.661 12.6705C135.275 12.9034 135.082 13.2159 135.082 13.608C135.082 13.9205 135.207 14.1847 135.457 14.4006C135.707 14.6165 136.136 14.7898 136.744 14.9205L139.113 15.3977C140.386 15.6591 141.335 16.0795 141.96 16.6591C142.585 17.2386 142.897 18 142.897 18.9432C142.897 19.8011 142.644 20.554 142.138 21.2017C141.638 21.8494 140.951 22.3551 140.076 22.7188C139.207 23.0767 138.204 23.2557 137.067 23.2557C135.335 23.2557 133.954 22.8949 132.925 22.1733C131.903 21.446 131.303 20.4574 131.127 19.2074L134.698 19.0199C134.806 19.5483 135.067 19.9517 135.482 20.2301C135.897 20.5028 136.428 20.6392 137.076 20.6392C137.712 20.6392 138.224 20.517 138.61 20.2727C139.002 20.0227 139.201 19.7017 139.207 19.3097C139.201 18.9801 139.062 18.7102 138.789 18.5C138.516 18.2841 138.096 18.1193 137.528 18.0057L135.261 17.554C133.982 17.2983 133.031 16.8551 132.406 16.2244C131.786 15.5937 131.477 14.7898 131.477 13.8125C131.477 12.9716 131.704 12.2472 132.158 11.6392C132.619 11.0312 133.263 10.5625 134.093 10.233C134.928 9.90341 135.906 9.73864 137.025 9.73864C138.678 9.73864 139.979 10.0881 140.928 10.7869C141.883 11.4858 142.44 12.4375 142.599 13.642ZM151.149 23.2557C149.803 23.2557 148.643 22.983 147.672 22.4375C146.706 21.8864 145.962 21.108 145.439 20.1023C144.916 19.0909 144.655 17.8949 144.655 16.5142C144.655 15.1676 144.916 13.9858 145.439 12.9688C145.962 11.9517 146.697 11.1591 147.646 10.5909C148.601 10.0227 149.72 9.73864 151.004 9.73864C151.868 9.73864 152.672 9.87784 153.416 10.1562C154.166 10.429 154.82 10.8409 155.376 11.392C155.939 11.9432 156.376 12.6364 156.689 13.4716C157.001 14.3011 157.158 15.2727 157.158 16.3864V17.3835H146.104V15.1335H153.74C153.74 14.6108 153.626 14.1477 153.399 13.7443C153.172 13.3409 152.857 13.0256 152.453 12.7983C152.055 12.5653 151.592 12.4489 151.064 12.4489C150.513 12.4489 150.024 12.5767 149.598 12.8324C149.178 13.0824 148.848 13.4205 148.609 13.8466C148.371 14.267 148.249 14.7358 148.243 15.2528V17.392C148.243 18.0398 148.362 18.5994 148.601 19.071C148.845 19.5426 149.189 19.9062 149.632 20.1619C150.075 20.4176 150.601 20.5455 151.209 20.5455C151.612 20.5455 151.982 20.4886 152.317 20.375C152.652 20.2614 152.939 20.0909 153.178 19.8636C153.416 19.6364 153.598 19.358 153.723 19.0284L157.081 19.25C156.911 20.0568 156.561 20.7614 156.033 21.3636C155.51 21.9602 154.834 22.4261 154.004 22.7614C153.18 23.0909 152.229 23.2557 151.149 23.2557ZM170.419 13.642L167.095 13.8466C167.038 13.5625 166.916 13.3068 166.729 13.0795C166.541 12.8466 166.294 12.6619 165.987 12.5256C165.686 12.3835 165.325 12.3125 164.905 12.3125C164.342 12.3125 163.868 12.4318 163.482 12.6705C163.095 12.9034 162.902 13.2159 162.902 13.608C162.902 13.9205 163.027 14.1847 163.277 14.4006C163.527 14.6165 163.956 14.7898 164.564 14.9205L166.933 15.3977C168.206 15.6591 169.155 16.0795 169.78 16.6591C170.405 17.2386 170.717 18 170.717 18.9432C170.717 19.8011 170.464 20.554 169.959 21.2017C169.459 21.8494 168.771 22.3551 167.896 22.7188C167.027 23.0767 166.024 23.2557 164.888 23.2557C163.155 23.2557 161.774 22.8949 160.746 22.1733C159.723 21.446 159.124 20.4574 158.947 19.2074L162.518 19.0199C162.626 19.5483 162.888 19.9517 163.303 20.2301C163.717 20.5028 164.249 20.6392 164.896 20.6392C165.533 20.6392 166.044 20.517 166.43 20.2727C166.822 20.0227 167.021 19.7017 167.027 19.3097C167.021 18.9801 166.882 18.7102 166.609 18.5C166.337 18.2841 165.916 18.1193 165.348 18.0057L163.081 17.554C161.803 17.2983 160.851 16.8551 160.226 16.2244C159.607 15.5937 159.297 14.7898 159.297 13.8125C159.297 12.9716 159.524 12.2472 159.979 11.6392C160.439 11.0312 161.084 10.5625 161.913 10.233C162.749 9.90341 163.726 9.73864 164.845 9.73864C166.499 9.73864 167.8 10.0881 168.749 10.7869C169.703 11.4858 170.26 12.4375 170.419 13.642ZM181.635 23H177.68L183.706 5.54545H188.462L194.479 23H190.524L186.152 9.53409H186.016L181.635 23ZM181.388 16.1392H190.729V19.0199H181.388V16.1392ZM200.27 5.54545V23H196.58V5.54545H200.27Z" fill="black"/>
          <path fill-rule="evenodd" clip-rule="evenodd" d="M19.7917 2.07692H22.9167C23.4692 2.07692 23.9991 2.29574 24.3898 2.68524C24.7805 3.07474 25 3.60301 25 4.15385V24.9231C25 25.4739 24.7805 26.0022 24.3898 26.3917C23.9991 26.7812 23.4692 27 22.9167 27H2.08333C1.5308 27 1.00089 26.7812 0.610194 26.3917C0.219493 26.0022 0 25.4739 0 24.9231V4.15385C0 3.60301 0.219493 3.07474 0.610194 2.68524C1.00089 2.29574 1.5308 2.07692 2.08333 2.07692H5.20833V1.03846C5.20833 0.763044 5.31808 0.498908 5.51343 0.304158C5.70878 0.109409 5.97373 0 6.25 0C6.52627 0 6.79122 0.109409 6.98657 0.304158C7.18192 0.498908 7.29167 0.763044 7.29167 1.03846V2.07692H17.7083V1.03846C17.7083 0.763044 17.8181 0.498908 18.0134 0.304158C18.2088 0.109409 18.4737 0 18.75 0C19.0263 0 19.2912 0.109409 19.4866 0.304158C19.6819 0.498908 19.7917 0.763044 19.7917 1.03846V2.07692ZM5.20833 5.19231V4.15385H2.08333V8.30769H22.9167V4.15385H19.7917V5.19231C19.7917 5.46773 19.6819 5.73186 19.4866 5.92661C19.2912 6.12136 19.0263 6.23077 18.75 6.23077C18.4737 6.23077 18.2088 6.12136 18.0134 5.92661C17.8181 5.73186 17.7083 5.46773 17.7083 5.19231V4.15385H7.29167V5.19231C7.29167 5.46773 7.18192 5.73186 6.98657 5.92661C6.79122 6.12136 6.52627 6.23077 6.25 6.23077C5.97373 6.23077 5.70878 6.12136 5.51343 5.92661C5.31808 5.73186 5.20833 5.46773 5.20833 5.19231ZM2.08333 24.9231H22.9167V10.3846H2.08333V24.9231Z" fill="black"/>
          <path d="M17.9245 13.8038C18.0213 13.9002 18.0982 14.0147 18.1506 14.1408C18.203 14.2669 18.23 14.402 18.23 14.5385C18.23 14.6749 18.203 14.8101 18.1506 14.9361C18.0982 15.0622 18.0213 15.1767 17.9245 15.2732L11.6745 21.5039C11.5777 21.6005 11.4629 21.6771 11.3364 21.7294C11.2099 21.7816 11.0744 21.8085 10.9375 21.8085C10.8006 21.8085 10.6651 21.7816 10.5386 21.7294C10.4121 21.6771 10.2973 21.6005 10.2005 21.5039L7.07552 18.3886C6.88006 18.1937 6.77025 17.9294 6.77025 17.6538C6.77025 17.3783 6.88006 17.114 7.07552 16.9191C7.27098 16.7243 7.53608 16.6148 7.8125 16.6148C8.08892 16.6148 8.35402 16.7243 8.54948 16.9191L10.9375 19.3011L16.4505 13.8038C16.5473 13.7072 16.6621 13.6306 16.7886 13.5783C16.9151 13.5261 17.0506 13.4992 17.1875 13.4992C17.3244 13.4992 17.4599 13.5261 17.5864 13.5783C17.7129 13.6306 17.8277 13.7072 17.9245 13.8038Z" fill="#FF6C47"/>
        </svg>

     </header>

     
    <main className='mainHome'>
       <div className='phraseContainer'>

          <h1>Dia 31/out se comemora o Halloween!</h1>

          <div className='phraseContain'>

                {/* <div className='filter'>
              
                    <div className="dropdown">
                      <button className="dropbtn" onClick={() => toggleDropdown('Jan')}>
                        Jan
                      </button>
                      {activeDropdown === 'Jan' && (
                        <div className="dropdown-content">
                          <button onClick={()=>handleFilter('Ano Novo')}>Ano Novo</button>
                        </div>
                      )}
                    </div>
                    <div className="dropdown">
                      <button className="dropbtn" onClick={() => toggleDropdown('Feb')}>
                        Fev
                      </button>
                      {activeDropdown === 'Feb' && (
                        <div className="dropdown-content">
                          <button onClick={() => handleFilter('Volta as aulas')}>Volta as aulas</button>
                          <button onClick={() => handleFilter('Carnaval')}>Carnaval</button>
                        </div>
                      )}
                    </div>
                </div> */}


                <div className='filter'>
                
                  <p><strong>Jan</strong></p>
                  <div>
                    <ul>
                      
                      
                        <li><button  className={activeButton === 1 ? 'active' : ''} onClick={() => handleFilter(1, 'ANo Novo')}>Ano Novo</button></li>
                    </ul>
                  </div>
                  

                  <div>
                    <p><strong>Fev</strong></p>
                    <div>
                      <ul>
                      <li><button  className={activeButton === 2 ? 'active' : ''} onClick={() => handleFilter(2, 'Carnaval')}>Carnaval</button></li>

                      </ul>
                    </div>
                  </div>
                   

                   
              
                   
                </div>
          
                <div className='txtPhrase'>
                    {phrase.length === 0 ? 
                      <div className='txtPhraseContainer'>
                        <p>Clique abaixo para gerar uma frase para suas redes sociais!</p>
                        <button onClick={() => handleCreate('halloween')} className='btn create'>Gerar Frase</button>
                      </div>
                      
                      : <div className='txtPhraseContainer'>
                          {phrase.map((item, index) => (
                              <p key={index}>{cleanText(item.generated_text)}</p> 
                          ))}
                          
                          <div className='btnPhraseContainer'>
                  
                            <button onClick={handleClean}>Limpar</button>
                          </div>
                        </div> 
                    }
                    
              </div>
          </div>

         
       

       </div>


    </main>

      
     
    </div>
  )
}

export default App
